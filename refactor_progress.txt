

** TOOOO DOOOOS **

* Done for now! XOXO

*** RAIIIIIII ***

* Done for now! XOXO

*** Responsibility Refactor ***

X Separate out input, update and collision handling from the generic Update()

X Separate the Render function into its separate states, while also adding in the stuff from Run that should be in Render

* Split up Game.h into multiple header-files that define specific things

* Go over two-step initialization and work to initialize everything as tightly as possible

*** Game Flow ***

* Split the game update logic into multiple functions

* Split the render logic into multiple functions

*** Collision System ***

* The collision functionality seems insanely over-engineered! It checks the start and end point of a line by way of circular collision instead of just comparing two circles

* Perhaps a "can collide" interface with a Rectangle of some kind? It should call a provided "on collision"-callback function that handles whatever must be handled

* Use simple collider layers (1 = player, 2 = enemies, 3 (1+2) = walls)

*** State Handling ***

* Should the states be separated? If so, now is the time!

*** WARNINGS AS ERRORS ***

* Turn on Warnings As Errors and enjoy the show!

*** Const and stuff like that! ***

* Try some Const-chasing in the rendering code and see if you can get all/most rendering functions to become const

* Text formatting should use std-formatting instead of c-style